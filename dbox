#!/bin/bash

function print_help() {
    echo " $0 [command]
Development toolbox

Available Commands:
  rl                        run on local
  rk                        run on kubernetes
  da                        delete all resources
  acr                       delete cr
  dcr                       apply cr
  t     test with simple client
" >&2
}

function wait_condition {
  cond=$1
  timeout=$2

  for ((i=0; i<timeout; i+=5)) do
    echo "Waiting for ${i}s condition: \"$cond\""
    if eval $cond > /dev/null 2>&1; then echo "Conditon met"; return 0; fi;
    sleep 5
    kubectl get pods -A
  done

  echo "Condition timeout"
  return 1
}

IMG=quay.io/sample-mysql-operator/sample-mysql-operator:canary

case "${1:-}" in
rl)
  make && make install && make run ENABLE_WEBHOOKS=false
  ;;
rk)
  make && make install && make docker-build && make docker-push && make deploy
  ;;
da)
  (make undeploy || true) && (make uninstall || true)
  ;;
acr)
  kubectl apply -f config/samples/mysql_v1alpha1_mysql.yaml
  ;;
dcr)
  kubectl delete -f config/samples/mysql_v1alpha1_mysql.yaml
  ;;
gcr)
  kubectl get mysqls.v1alpha1.mysql.sample.com -o json
  ;;
t)
  kubectl run mysql-client --image=mysql:5.7 -i --rm --restart=Never -- mysql -h mysql-sample-0.mysql-sample -e "CREATE DATABASE test; CREATE TABLE test.messages (message VARCHAR(250)); INSERT INTO test.messages VALUES ('hello');"
  kubectl run mysql-client-loop --image=mysql:5.7 -i -t --rm --restart=Never -- bash -ic "while sleep 1; do mysql -h mysql-sample-read -e 'SELECT @@server_id,NOW()'; done"
  ;;
*)
  print_help
;;
esac
